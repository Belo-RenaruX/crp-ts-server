name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Update version in files
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          echo "üì¶ Setting version to $VERSION"

          # package.json
          jq --arg version "$VERSION" '.version = $version' package.json > package.tmp.json && mv package.tmp.json package.json

          # swagger.meta.ts
          sed -i'' -E "s/version:\s*['\"](.*)['\"]/version: '$VERSION'/g" src/docs/meta/swagger.meta.ts

      - name: Generate changelog
        run: |
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          COMMIT_HASH=$(git rev-parse --short HEAD)
          REPO_SLUG=$(git config --get remote.origin.url | sed -E 's#(git@|https://)github.com[/:](.+)\.git#\2#')

          {
            echo "## v${{ steps.version.outputs.VERSION }}"
            echo ""
            echo "- $COMMIT_MSG ([\`$COMMIT_HASH\`](https://github.com/$REPO_SLUG/commit/$COMMIT_HASH))"
            echo ""
          } > CHANGELOG.md

      - name: Build project
        run: yarn build

      - name: Create release zip
        run: zip -r dist.zip dist/

      - name: Extract latest changelog block
        run: |
          awk '/^## / && ++count > 1 { exit } count { print }' CHANGELOG.md > LATEST_CHANGELOG.md

      - name: Upload GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: LATEST_CHANGELOG.md
          files: |
            dist.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit version and changelog to master
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout master
          git pull origin master

          git add package.json src/docs/meta/swagger.meta.ts CHANGELOG.md
          git commit -m "üîñ Release metadata for ${{ steps.version.outputs.VERSION }}" || echo "‚ÑπÔ∏è No changes to commit"
          git push origin master